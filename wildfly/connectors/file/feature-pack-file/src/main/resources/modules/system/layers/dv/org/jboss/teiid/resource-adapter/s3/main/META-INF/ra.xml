<?xml version="1.0" encoding="UTF-8"?>

<connector version="1.5">

   <vendor-name>Red Hat Middleware LLC</vendor-name>
   <eis-type>Teiid S3 Connector</eis-type>
   <resourceadapter-version>1.0</resourceadapter-version>
   <license>
      <description>
 Copyright Red Hat, Inc. and/or its affiliates
 and other contributors as indicated by the @author tags and
 the COPYRIGHT.txt file distributed with this work.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
      </description>
      <license-required>true</license-required>
   </license>
   <resourceadapter>
      <resourceadapter-class>org.teiid.resource.adapter.s3.S3ResourceAdapter</resourceadapter-class>

      <outbound-resourceadapter>
         <connection-definition>
            <managedconnectionfactory-class>org.teiid.resource.adapter.s3.S3ManagedConnectionFactory</managedconnectionfactory-class>

            <config-property>
               <description>{$display:"S3 Endpoint",$description:"If specified it is expected to be the full service endpoint containing protocol, service, region, and hostname information as applicable."}</description>
               <config-property-name>Endpoint</config-property-name>
               <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
               <description>{$display:"Access Key",$required:"true"}</description>
               <config-property-name>AccessKey</config-property-name>
               <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
               <description>{$display:"Secret Key",$required:"true"}</description>
               <config-property-name>SecretKey</config-property-name>
               <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
               <description>{$display:"Bucket",$required:"true"}</description>
               <config-property-name>Bucket</config-property-name>
               <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
               <description>{$display:"Region",$description:"If endpoint is not specified, this is the AWS region. If endpoint is specified, this is the signer region override only and does not affect the endpoint."}</description>
               <config-property-name>Region</config-property-name>
               <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <config-property>
               <description>{$display:"Server Side Encryption Algorithm"}</description>
               <config-property-name>SseAlgorithm</config-property-name>
               <config-property-type>java.lang.String</config-property-type>
               <config-property-value>AES256</config-property-value>
            </config-property>
            
            <config-property>
               <description>{$display:"Server Side Encryption Key"}</description>
               <config-property-name>SseKey</config-property-name>
               <config-property-type>java.lang.String</config-property-type>
            </config-property>
            
            <connectionfactory-interface>javax.resource.cci.ConnectionFactory</connectionfactory-interface>
            <connectionfactory-impl-class>org.teiid.resource.spi.WrappedConnectionFactory</connectionfactory-impl-class>
            <connection-interface>javax.resource.cci.Connection</connection-interface>
            <connection-impl-class>org.teiid.resource.spi.WrappedConnection</connection-impl-class>

         </connection-definition>
         
         <transaction-support>NoTransaction</transaction-support>
        
        <authentication-mechanism>
            <authentication-mechanism-type>BasicPassword</authentication-mechanism-type>
            <credential-interface>javax.resource.spi.security.PasswordCredential</credential-interface>
        </authentication-mechanism>
        <reauthentication-support>false</reauthentication-support>
      </outbound-resourceadapter>
   </resourceadapter>
</connector>
