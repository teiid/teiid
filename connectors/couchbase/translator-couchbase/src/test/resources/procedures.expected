CREATE FOREIGN PROCEDURE getTextDocuments(IN id string NOT NULL OPTIONS (ANNOTATION 'The document id or SQL like pattern of what documents to return, for example, the ''%'' sign is used to define wildcards (missing letters) both before and after the pattern'), IN keyspace string NOT NULL OPTIONS (ANNOTATION '<Missing message for key "getTextDocuments.keyspaceName.Annotation" in: org.teiid.translator.couchbase.i18n>')) RETURNS TABLE (id string, result clob)
OPTIONS (ANNOTATION 'Returns json documents that match the given document id or id pattern as CLOBs');

CREATE FOREIGN PROCEDURE getDocuments(IN id string NOT NULL OPTIONS (ANNOTATION 'The document id or SQL like pattern of what documents to return, for example, the ''%'' sign is used to define wildcards (missing letters) both before and after the pattern'), IN keyspace string NOT NULL OPTIONS (ANNOTATION 'The keyspace name used to retrieve the documents')) RETURNS TABLE (result blob)
OPTIONS (ANNOTATION 'Returns json documents that match the given document id or id pattern as BLOBs');

CREATE FOREIGN PROCEDURE getTextDocument(IN id string NOT NULL OPTIONS (ANNOTATION 'The document id of what document to return'), IN keyspace string NOT NULL OPTIONS (ANNOTATION 'The keyspace name used to retrieve the document')) RETURNS TABLE (id string, result clob)
OPTIONS (ANNOTATION 'Return a json document that match the given document id as CLOB');

CREATE FOREIGN PROCEDURE getDocument(IN id string NOT NULL OPTIONS (ANNOTATION 'The document id of what documents to return'), IN keyspace string NOT NULL OPTIONS (ANNOTATION 'The keyspace name used to retrieve the document')) RETURNS TABLE (result blob)
OPTIONS (ANNOTATION 'Return a json document that match the given document id as BLOB');

CREATE FOREIGN PROCEDURE saveDocument(IN id string NOT NULL OPTIONS (ANNOTATION 'The document id used to save the document'), IN keyspace string NOT NULL OPTIONS (ANNOTATION 'The keyspace name used to save the document'), IN document object NOT NULL OPTIONS (ANNOTATION 'The contents to save.  Can be one of CLOB, BLOB, or json String')) RETURNS TABLE (result clob)
OPTIONS (ANNOTATION 'Saves the given value with the given id.  Any existing document will be overriden.');

CREATE FOREIGN PROCEDURE deleteDocument(IN id string NOT NULL OPTIONS (ANNOTATION 'The document id or SQL like pattern of what documents to delete, for example, the ''%'' sign is used to define wildcards (missing letters) both before and after the pattern'), IN keyspace string NOT NULL OPTIONS (ANNOTATION 'The keyspace name used to delete the document by id')) RETURNS TABLE (result clob)
OPTIONS (ANNOTATION 'Delete the docuemnt via id');

CREATE FOREIGN PROCEDURE getTextMetadataDocument(IN keyspace string NOT NULL OPTIONS (ANNOTATION 'The keyspace name used to retrieve metadata')) RETURNS TABLE (result clob)
OPTIONS (ANNOTATION 'Retrieve metadata(documentID, etc) json document as CLOB from a specific keyspace');

CREATE FOREIGN PROCEDURE getMetadataDocument(IN keyspace string NOT NULL OPTIONS (ANNOTATION 'The keyspace name used to retrieve metadata')) RETURNS TABLE (result blob)
OPTIONS (ANNOTATION 'Retrieve metadata(documentID, etc) json document as BLOB from a specific keyspace');