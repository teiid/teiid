#
# JBoss, Home of Professional Open Source.
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership.  Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.
#
getTextDocuments.Annotation=Returns json documents that match the given document id or id pattern as CLOBs
getTextDocuments.id.Annotation=The document id or SQL like pattern of what documents to return, for example, the '%' sign is used to define wildcards (missing letters) both before and after the pattern
getTextDocuments.keyspace.Annotation=The keyspace name used to retrieve the documents

getDocuments.Annotation=Returns json documents that match the given document id or id pattern as BLOBs
getDocuments.id.Annotation=The document id or SQL like pattern of what documents to return, for example, the '%' sign is used to define wildcards (missing letters) both before and after the pattern
getDocuments.keyspace.Annotation=The keyspace name used to retrieve the documents

getTextDocument.Annotation=Return a json document that match the given document id as CLOB
getTextDocument.id.Annotation=The document id of what document to return
getTextDocument.keyspace.Annotation=The keyspace name used to retrieve the document

getDocument.Annotation=Return a json document that match the given document id as BLOB
getDocument.id.Annotation=The document id of what documents to return
getDocument.keyspace.Annotation=The keyspace name used to retrieve the document

saveDocument.Annotation=Saves the given value with the given id.  Any existing document will be overriden.
saveDocument.id.Annotation=The document id used to save the document
saveDocument.keyspace.Annotation=The keyspace name used to save the document
saveDocument.document.Annotation=The contents to save.  Can be one of CLOB, BLOB, or json String

deleteDocument.Annotation=Delete the docuemnt via id
deleteDocument.id.Annotation=The document id or SQL like pattern of what documents to delete, for example, the '%' sign is used to define wildcards (missing letters) both before and after the pattern
deleteDocument.keyspace.Annotation=The keyspace name used to delete the document by id

getTextMetadataDocument.Annotation=Retrieve metadata(documentID, etc) json document as CLOB from a specific keyspace
getTextMetadataDocument.keyspace.Annotation=The keyspace name used to retrieve metadata

getMetadataDocument.Annotation=Retrieve metadata(documentID, etc) json document as BLOB from a specific keyspace
getMetadataDocument.keyspace.Annotation=The keyspace name used to retrieve metadata

TEIID29001=Execute Source Query: {0}
TEIID29002=Execute procedure {0}, query source: {1}
TEIID29003=MetadataProcessor execute N1QL: {0}
TEIID29008=Sample size not defined, use default {0}
TEIID29009=No typeNameList defined, a typeNameList is recommended. A typeNameList is a comma-separate list of the attributes that the buckets use to specify document types. Each list item must be a bucket name surrounded by back quotes (`), a colon (:), and an attribute name surrounded by back quotes (`).
TEIID29010=User-defined schema was invalid. The '{0}' schema will be used
TEIID29011=Load all keyspaces via {0}, result {1}
TEIID29012={0} not valid, TypeNameList should be a comma-separate list of the attributes that the buckets use to specify document types. Each list item must be a bucket name surrounded by back quotes (`), a colon (:), and an attribute name surrounded by back quotes (`).
TEIID29013=scanRow, "table:" {0}, "key:" {1} -> "value:" {2}
TEIID29014=Document {0} not contain a array, expected column names are {1}
TEIID29015=Array item out of index, expect length is {0}, expected column names are {1}, array item value is {2}
TEIID29016=Array item mismatch, expect length is {0}, real length is {1}, column names are {2}, array item value is {3}
