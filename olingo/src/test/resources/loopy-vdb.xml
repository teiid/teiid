<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<vdb name="Loopy" version="1">
    <model name="PM1">
        <source name="text-connector2" translator-name="loopback" />
         <metadata type="DDL"><![CDATA[
                CREATE FOREIGN TABLE HIDDEN (e1 string, e2 integer PRIMARY KEY, e3 double) OPTIONS("teiid_odata:visible" false);
                CREATE FOREIGN TABLE G1 (e1 string, e2 integer PRIMARY KEY, e3 double) OPTIONS(UPDATABLE true);
                CREATE FOREIGN TABLE G2 (e1 string, e2 integer PRIMARY KEY, CONSTRAINT FK0 FOREIGN KEY (e2) REFERENCES G1 (e2)) OPTIONS (UPDATABLE 'true');
                CREATE FOREIGN TABLE NoPKTable (e1 string, e2 integer, e3 double);
                CREATE FOREIGN TABLE StreamTable (e1 integer PRIMARY KEY, e2 xml, e3 Blob);                
        ]]> </metadata>
    </model>

    <model name="PM2" visible="false">
        <source name="text-connector2" translator-name="loopback"/>
         <metadata type="DDL"><![CDATA[
                CREATE FOREIGN TABLE G1 (e1 string, e2 integer PRIMARY KEY, e3 double);
                CREATE FOREIGN TABLE G2 (e1 string PRIMARY KEY, e2 integer not null, CONSTRAINT FK0 FOREIGN KEY (e2) REFERENCES G1 (e2) ) OPTIONS (UPDATABLE 'true');
        ]]> </metadata>
    </model>

    <model name="VM1" type="VIRTUAL">
         <metadata type="DDL"><![CDATA[
            CREATE VIEW LobTable (e1 integer PRIMARY KEY, e2 xml) AS
               SELECT 1, XMLELEMENT("name", 'content') union all SELECT 2, XMLELEMENT("name", 'content2');
            
            CREATE VIEW G1 (e1 string, e2 integer PRIMARY KEY, e3 double) OPTIONS("teiid_rel:CUSTOM_EXTENSION" 'CUSTOM_VALUE') AS
               SELECT e1, e2, e3 FROM PM1.G1
               UNION ALL
               SELECT e1, e2, e3 FROM PM2.G1;
            
            CREATE VIEW G2 (e1 string PRIMARY KEY, e2 integer, CONSTRAINT FK0 FOREIGN KEY (e2) REFERENCES G1 (e2)) AS
               SELECT e1, e2 FROM PM1.G1
               UNION ALL
               SELECT e1, e2 FROM PM2.G1;
               
            CREATE VIEW G4 (e1 string PRIMARY KEY, e2 integer, CONSTRAINT FKX FOREIGN KEY (e1) REFERENCES G1(e2)) OPTIONS (UPDATABLE 'true') AS
               SELECT e1, e2 FROM PM1.G1
               UNION ALL
               SELECT e1, e2 FROM PM2.G1;
                           
            CREATE VIRTUAL PROCEDURE proc (x string) returns string OPTIONS (UPDATECOUNT 0) AS
            BEGIN
                return x;
            END
            CREATE VIRTUAL PROCEDURE procResultSet(x string, y integer) returns TABLE(x string, y integer) OPTIONS (UPDATECOUNT 0) AS
            BEGIN
                select x, y union all select 'second', 2 union all select 'third', 3;
            END            
            CREATE VIRTUAL PROCEDURE procXML (x string) returns XML OPTIONS (UPDATECOUNT 0) AS
            BEGIN
                DECLARE XML VARIABLES.load = (SELECT XMLELEMENT("name", x));
                return VARIABLES.load;
            END
            CREATE VIRTUAL PROCEDURE procComposableXML (x string) returns TABLE(load XML) OPTIONS (UPDATECOUNT 0) AS
            BEGIN
                SELECT XMLELEMENT("name", x) union all select XMLELEMENT("name", 1);
            END
            CREATE VIRTUAL PROCEDURE procActionJSON (x string, y double) returns CLOB OPTIONS (UPDATECOUNT 1) AS
            BEGIN
                RETURN jsonObject(x as "x1", y as "y1");
            END                         
            CREATE VIRTUAL PROCEDURE actionXML (x XML) returns XML OPTIONS (UPDATECOUNT 0) AS
            BEGIN
                return x;
            END
            CREATE PROCEDURE getCustomers(IN p2 timestamp, IN p3 decimal, out p4 string) RETURNS timestamp OPTIONS (UPDATECOUNT 0) AS
            BEGIN 
              return p2;
            END                                   
            CREATE PROCEDURE getCustomerIds(IN p1 integer) RETURNS integer[] OPTIONS (UPDATECOUNT 0) AS
            BEGIN 
              return (p1, 2);
            END
        ]]> </metadata>
    </model>

</vdb>
