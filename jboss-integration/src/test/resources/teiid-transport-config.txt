{"attributes" => {
    "protocol" => {
        "type" => STRING,
        "description" => "Transport protocol (allowed=teiid, pg) ",
        "required" => false,
        "default" => "teiid"
    },
    "socket-binding" => {
        "type" => STRING,
        "description" => "Socket binding to be used for the transport",
        "required" => true
    },
    "max-socket-threads" => {
        "type" => INT,
        "description" => "Max number of threads dedicated to initial request processing. Zero indicates the system default of max available processors. (default 0)  Setting this value above the max available processors is not recommended.",
        "required" => false,
        "default" => 0
    },
    "input-buffer-size" => {
        "type" => INT,
        "description" => "SO_RCVBUF size, 0 indicates that system default should be used (default 0)",
        "required" => false,
        "default" => 0
    },
    "output-buffer-size" => {
        "type" => INT,
        "description" => "SO_SNDBUF size, 0 indicates that system default should be used (default 0)",
        "required" => false,
        "default" => 0
    },
    "authentication-security-domain" => {
        "type" => STRING,
        "description" => "Security domain to be enforced with the transport",
        "required" => false
    },
    "authentication-max-sessions-allowed" => {
        "type" => INT,
        "description" => "Maximum number of sessions allowed by the system (default 5000)",
        "required" => false,
        "default" => 5000
    },
    "authentication-sessions-expiration-timelimit" => {
        "type" => INT,
        "description" => "Max allowed time before the session is terminated by the system, 0 indicates unlimited (default 0)",
        "required" => false,
        "default" => 0
    },
    "authentication-krb5-domain" => {
        "type" => STRING,
        "description" => "KRB5 security domain name, if GSS API based single-sign-on is being used. Note security-domain still needed to define the roles for users.  ",
        "required" => false
    },
    "pg-max-lob-size-in-bytes" => {
        "type" => INT,
        "description" => "Max LOB size in Postgres protocol, as streaming is not supported",
        "required" => false,
        "default" => 5242880
    },
    "ssl-mode" => {
        "type" => STRING,
        "description" => "can be one of disabled, login, or enabled disabled = no transport or message level security will be used; login = only the login traffic will be encrypted at a message level using 128 bit AES with an ephemerial DH key exchange. No other config values are needed in this mode; and it only applies to the JDBC transport enabled = traffic will be secured using this configuration, if the client supports SSL",
        "required" => false,
        "default" => "login"
    },
    "ssl-authentication-mode" => {
        "type" => STRING,
        "description" => "Authentication Mode (1-way, 2-way, anonymous)             ",
        "required" => false,
        "default" => "1-way"
    },
    "ssl-ssl-protocol" => {
        "type" => STRING,
        "description" => "SSL protocol used",
        "required" => false,
        "default" => "TLSv1"
    },
    "ssl-keymanagement-algorithm" => {
        "type" => STRING,
        "description" => "Use key management algorithm",
        "required" => false
    },
    "enabled-cipher-suites" => {
        "type" => STRING,
        "description" => "Cipher suites that are allowed to be used for SSL. Use to restrict encryption strength(128 bit, 256 bit). Only provide encryption suites that are supported by both client and server JVM. ex:SSL_RSA_WITH_RC4_128_MD5, SSL_RSA_WITH_RC4_128_SHA, SSL_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA, SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_KRB5_WITH_RC4_128_MD5, TLS_KRB5_WITH_RC4_128_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_KRB5_WITH_3DES_EDE_CBC_MD5, TLS_KRB5_WITH_3DES_EDE_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA",
        "required" => false
    },
    "keystore-name" => {
        "type" => STRING,
        "description" => "Keystore File Name",
        "required" => false
    },
    "keystore-password" => {
        "type" => EXPRESSION,
        "description" => "Keystore password",
        "required" => false
    },
    "keystore-type" => {
        "type" => STRING,
        "description" => "Keystore type",
        "required" => false,
        "default" => "JKS"
    },
    "truststore-name" => {
        "type" => STRING,
        "description" => "Truststore Name",
        "required" => false
    },
    "truststore-password" => {
        "type" => EXPRESSION,
        "description" => "Truststore Password",
        "required" => false
    }
}}